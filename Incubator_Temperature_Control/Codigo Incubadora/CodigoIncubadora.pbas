program CodigoIncubadora

dim analogico,temperatura,temp_ac,temp_prom as word
dim unidad,decena,centena,flag,muestras,intensidad,set_temp as byte


sub procedure interrupt()

     if(PIR1.RCIF=1)then
      if Usart_Data_Ready = 1 then
         set_temp = Usart_Read
      end if
       PIR1.RCIF=0   ' Si el dato a llegado limpio la bandera de recepcion
       PIE1.RCIE=1   ' Habilitar nuevamente la interrupcion por USART
     end if
     
     if(INTCON.INTF=1)then
       if(intensidad > 0)then
         PORTB.5=0
         ''VDelay_ms(intensidad)
         select case intensidad
           case 1
             TMR0=240          ''(4/FOSC)*PRESCALADOR*(256-TMR0)=RETARDO
           case 2
             TMR0=225
           case 3
             TMR0=209
           case 4
             TMR0=193
           case 5
             TMR0=178
           case 6
             TMR0=162
           case 7
             TMR0=146
           case 8
             TMR0=131
          end select
          INTCON.T0IF=0
          INTCON.T0IE=1
       else
         PORTB.5=1
       end if
        INTCON.INTF=0
        INTCON.INTE =1

     end if
     
      if(INTCON.T0IF =1)then
        PORTB.5=1
        INTCON.T0IF=0
        INTCON.T0IE=0
       end if
end sub

main:

  OPTION_REG=%11000101 ' Configuracion de Puertos analogicos / digitales AN0 - AN13
  INTCON = 0
  ANSEL =  %00000000           'REGISTRO CONFIG. O DIGITAL, 1 ANALOGICO
  ANSELH = %00000010           'REGISTRO CONFIG. O DIGITAL, 1 ANALOGICO

  ' Configuracion de Puertos como entradas / salidas
  trisa  = %00000000           ' Configuracion IN/OUT PORTA
  trisb  = %00001001           ' Configuracion IN/OUT PORTB
  trisc  = %10000000           ' Configuracion IN/OUT PORTC


  ' Reset de salidas
  PORTA  = %00000000           ' Inicializacion PORTA
  PORTB  = %00000000           ' Inicializacion PORTC
  PORTC  = %00000000           ' Inicializacion PORTC

  flag=0
  intensidad=0
  muestras=0
  temp_ac=0
  temp_prom=0
  set_temp=0
  USART_Init(9600)
  Delay_ms(100)
  'Configuramos de pines a utilizar para LCD
  Lcd_Config(PORTA,6,5,4,3,PORTA,0,1,2) 'Lcd_Config(ddata_portd,db3, db2, db1,
                                        'db0,ctrl_port ,rs, ctrl_rw enable)
  Delay_ms(100)
  Lcd_Cmd(Lcd_CURSOR_OFF)               'Lcd_Cmd(commando)
  LCD_Cmd(LCD_CLEAR)
  Lcd_Out(1, 1,"Medidor Temperatura")
  INTCON =%11010000
  PIE1 = %00100000
  PIR1=0
  Delay_ms(100)
  
while  TRUE      ' Lazo infinito Bucle While

 do
         analogico = Adc_Read(9)
         temperatura=(analogico*100/230) ''
         inc(muestras)
         Delay_ms(2)
         temp_ac= temp_ac + temperatura
        loop until (muestras >=200)
         temp_prom = (temp_ac /200)
         
          if(temp_prom > set_temp )then
             if(intensidad <8)then
              inc(intensidad)
             end if
          else
             if(intensidad > 0)then
              dec(intensidad)
             end if
          end if

         centena=(( temp_prom/100) mod 10)+ 48
         decena=(( temp_prom/10) mod 10) + 48
         unidad=( temp_prom mod 10) + 48


         if( temp_prom>99)then
          flag=2
          Lcd_Out(2,6,"T=")
          Lcd_Chr(2,8,centena )
          Lcd_Chr(2,9,decena )
          Lcd_Chr(2,10,unidad )
          Lcd_Out(2,11," *C")
          USART_Write (centena )
          USART_Write(decena)
          USART_Write (unidad)
         else

          if(flag=2) then  Lcd_Out(2,6,"         ") flag=3 end if

          Lcd_Out(2,6,"T=")
          Lcd_Chr(2,8,decena )
          Lcd_Chr(2,9,unidad)
          Lcd_Out(2,11," *C")

          USART_Write(decena)
          USART_Write (unidad)
         end if
         
          USART_Write(10)
          USART_Write(13)
          muestras=0
          temp_ac=0
          temp_prom=0
          
          Delay_ms(500)

wend
  end.
