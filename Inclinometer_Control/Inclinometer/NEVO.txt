
'*******************     www.ideastechnology.com      **************************
'
' * Nombre proyecto:
'     SISTEMA DE ADQUISICION Y ALMACENAMIENTO DE DATOS CON MATLAB
' * Descripcion:
'     Este proyecto consiste en leer un dato analogico proveniente de un potenciometro
'     para controlar el nivel de PWM que le aplicamos al motor por medio del puente H
'     la señal digital que proviene del encoder optico es procesada y tranformada
'     a revoluciones por minuto (RPM) y posteriormente enviada por comunicacion serial
'     RS232 al computador donde MATLAB se encargara de tomar los datos de (PWM y RPM).
' * Configuraciones:
'     Microcontrolador:    PIC16F886
'     Oscillator:          INT_RC_OSC_NOCLKOUT, 4MHz
'*******************************************************************************

'*****         Nombre proyecto       *****
program Adquisicion
'*****  Declaración de Variables *****

 dim n,pot,humedad,pozo,receive as byte
 
 dim prom1,prom2 as word
 dim presion,bomba as byte
 
 dim txt as string[4]

'*****   Programa principal main  *****
'-----------------------------------------

main:
  'OPTION_REG=%11000000
  'INTCON = %11010000       ' Enable external interrupts bit(7) and bit(6) de permiso q no se controlan con INTCON
  'T1CON = $30
  'PIR1.TMR1IF = 0            ' clear TMR1IF
  'TMR1H = $0B                ' initialize Timer1 register
  'TMR1L = $DB
  'PIE1.TMR1IE  = 1         ' enable Timer1 interrupt
   
  ' Configuracion de Puertos analogicos / digitales AN0 - AN13
  ANSEL =  %00000001           'REGISTRO CONFIG. O DIGITAL, 1 ANALOGICO
  ANSELH = %00010000           'REGISTRO CONFIG. O DIGITAL, 1 ANALOGICO

  ' Configuracion de Puertos como entradas / salidas
  trisa  = %00000001           ' Configuracion IN/OUT PORTA
  trisb  = %00000001           ' Configuracion IN/OUT PORTB
  trisc  = %10000000           ' Configuracion IN/OUT PORTC

  ' Reset de salidas
  PORTA  = %00000000           ' Inicializacion PORTA
  PORTB  = %00000000           ' Inicializacion PORTA
  PORTC  = %00000000           ' Inicializacion PORTC

  'USART
  Uart1_Init(9600)                 ' Initialize USART module
  ' Lazo infinito Bucle While
  
  presion = ADC_Read(9)
  pot = ADC_Read(0)
  n=0
  
  while true
  
        if (UART1_Data_Ready() = 1) then
            receive = UART1_Read()
            
            if receive= "0" then '' m - me envian modo manual
               porta.3=1  'enciende led
               portb.3=0  'prende rele
            else
               porta.3=0   'apaga led
               portb.3=1   'apaga rele
            end if
        end if
      n=0
      prom1=0
      while n<100
            presion = ADC_Read(9)
            pot = ADC_Read(0)
            prom1=prom1+presion
            n=n+1
      wend
      prom1=prom1/100


      UART1_Write_text("p")
      ByteToStr(prom1,txt)
      UART1_Write_text(txt)
'      UART1_Write(10)
'      UART1_Write(13)

      porta.1=1
      delay_ms(250)
      porta.1=0
      delay_ms(250)
  wend
end.