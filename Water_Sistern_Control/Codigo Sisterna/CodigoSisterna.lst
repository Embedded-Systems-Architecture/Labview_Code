;  Assembly code generated by mikroVirtualMachine - V. 5.0.0.3
;  Date/Time: 05/01/2011 11:31:29
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$285B			GOTO	_main
$01BA	$	_usart_data_ready:
;USART_c67.ppas,48 :: 		
;USART_c67.ppas,50 :: 		
$01BA	$1303			BCF	STATUS, RP1
$01BB	$1283			BCF	STATUS, RP0
$01BC	$080C			MOVF	PIR1, 0
$01BD	$00F1			MOVWF	STACK_1
$01BE	$3000			MOVLW	0
$01BF	$1AF1			BTFSC	STACK_1, 5
$01C0	$3001			MOVLW	1
$01C1	$00F1			MOVWF	STACK_1
$01C2	$0871			MOVF	STACK_1, 0
$01C3	$00AD			MOVWF	_usart_data_ready_local_result
$01C4	$	USART_c67_L_18:
;USART_c67.ppas,51 :: 		
$01C4	$082D			MOVF	_usart_data_ready_local_result, 0
$01C5	$00F0			MOVWF	STACK_0
$01C6	$0008			RETURN
$0184	$	_usart_read:
;USART_c67.ppas,54 :: 		
;USART_c67.ppas,55 :: 		
$0184	$1303			BCF	STATUS, RP1
$0185	$1283			BCF	STATUS, RP0
$0186	$081A			MOVF	RCREG, 0
$0187	$00AD			MOVWF	_usart_read_local_result
;USART_c67.ppas,61 :: 		
$0188	$0818			MOVF	RCSTA, 0
$0189	$00F1			MOVWF	STACK_1
$018A	$3000			MOVLW	0
$018B	$18F1			BTFSC	STACK_1, 1
$018C	$3001			MOVLW	1
$018D	$00F1			MOVWF	STACK_1
$018E	$0871			MOVF	STACK_1, 0
$018F	$3A01			XORLW	1
$0190	$1D03			BTFSS	STATUS, Z
$0191	$2994			GOTO	USART_c67_L_21
$0192	$	USART_c67_L_20:
;USART_c67.ppas,63 :: 		
$0192	$1218			BCF	RCSTA, 4
$0193	$	USART_c67_L_24:
;USART_c67.ppas,64 :: 		
$0193	$	USART_c67_L_25:
$0193	$1618			BSF	RCSTA, 4
$0194	$	USART_c67_L_26:
;USART_c67.ppas,65 :: 		
$0194	$	USART_c67_L_21:
$0194	$	USART_c67_L_22:
$0194	$	USART_c67_L_19:
;USART_c67.ppas,66 :: 		
$0194	$082D			MOVF	_usart_read_local_result, 0
$0195	$00F0			MOVWF	STACK_0
$0196	$0008			RETURN
$0004	$	_interrupt:
$0004	$00FF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00AB			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00AA			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00AC			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0871			MOVF	STACK_1, 0
$000E	$00B3			MOVWF	STSAVED_1
$000F	$0870			MOVF	STACK_0, 0
$0010	$00B2			MOVWF	STSAVED_0
;CodigoSisterna.pbas,23 :: 		sub procedure interrupt                   ' Interrupt service routine
;CodigoSisterna.pbas,25 :: 		if INTCON.INTF = 1 then            ' External interupt (RB0 pin) ?
$0011	$3000			MOVLW	0
$0012	$188B			BTFSC	INTCON, 1
$0013	$3001			MOVLW	1
$0014	$00F2			MOVWF	STACK_2
$0015	$0872			MOVF	STACK_2, 0
$0016	$3A01			XORLW	1
$0017	$1D03			BTFSS	STATUS, Z
$0018	$282D			GOTO	CodigoSisterna_L_3
$0019	$	CodigoSisterna_L_2:
;CodigoSisterna.pbas,26 :: 		if(flanco=1) then
$0019	$0820			MOVF	_flanco, 0
$001A	$3A01			XORLW	1
$001B	$1D03			BTFSS	STATUS, Z
$001C	$2822			GOTO	CodigoSisterna_L_6
$001D	$	CodigoSisterna_L_5:
;CodigoSisterna.pbas,27 :: 		TMR0=0
$001D	$0181			CLRF	TMR0, 1
;CodigoSisterna.pbas,28 :: 		flanco=0
$001E	$01A0			CLRF	_flanco, 1
;CodigoSisterna.pbas,29 :: 		OPTION_REG.INTEDG=0
$001F	$1683			BSF	STATUS, RP0
$0020	$1301			BCF	OPTION_REG, 6
$0021	$	CodigoSisterna_L_9:
$0021	$282A			GOTO	CodigoSisterna_L_7
;CodigoSisterna.pbas,31 :: 		else
$0022	$	CodigoSisterna_L_6:
;CodigoSisterna.pbas,32 :: 		Tiempo=TMR0
$0022	$1283			BCF	STATUS, RP0
$0023	$0801			MOVF	TMR0, 0
$0024	$00A1			MOVWF	_tiempo
;CodigoSisterna.pbas,33 :: 		TMR0=0
$0025	$0181			CLRF	TMR0, 1
;CodigoSisterna.pbas,34 :: 		flanco=1
$0026	$3001			MOVLW	1
$0027	$00A0			MOVWF	_flanco
;CodigoSisterna.pbas,35 :: 		OPTION_REG.INTEDG=1
$0028	$	CodigoSisterna_L_10:
$0028	$1683			BSF	STATUS, RP0
$0029	$1701			BSF	OPTION_REG, 6
$002A	$	CodigoSisterna_L_11:
;CodigoSisterna.pbas,36 :: 		end if
$002A	$	CodigoSisterna_L_7:
;CodigoSisterna.pbas,38 :: 		INTCON.INTF = 0
$002A	$108B			BCF	INTCON, 1
$002B	$	CodigoSisterna_L_13:
;CodigoSisterna.pbas,39 :: 		INTCON.INTE=1
$002B	$	CodigoSisterna_L_14:
$002B	$160B			BSF	INTCON, 4
$002C	$	CodigoSisterna_L_15:
;CodigoSisterna.pbas,40 :: 		INTCON.T0IF = 0
$002C	$110B			BCF	INTCON, 2
$002D	$	CodigoSisterna_L_17:
$002D	$	CodigoSisterna_L_3:
;CodigoSisterna.pbas,42 :: 		end if
$002D	$	CodigoSisterna_L_4:
;CodigoSisterna.pbas,44 :: 		if(PIR1.RCIF=1)then
$002D	$1303			BCF	STATUS, RP1
$002E	$1683			BSF	STATUS, RP0
$002F	$3000			MOVLW	0
$0030	$1283			BCF	STATUS, RP0
$0031	$1A8C			BTFSC	PIR1, 5
$0032	$3001			MOVLW	1
$0033	$00F2			MOVWF	STACK_2
$0034	$0872			MOVF	STACK_2, 0
$0035	$3A01			XORLW	1
$0036	$1D03			BTFSS	STATUS, Z
$0037	$284B			GOTO	CodigoSisterna_L_19
$0038	$	CodigoSisterna_L_18:
;CodigoSisterna.pbas,45 :: 		if Usart_Data_Ready = 1 then
$0038	$21BA			CALL	_usart_data_ready
$0039	$0870			MOVF	STACK_0, 0
$003A	$3A01			XORLW	1
$003B	$1D03			BTFSS	STATUS, Z
$003C	$2848			GOTO	CodigoSisterna_L_22
$003D	$	CodigoSisterna_L_21:
;CodigoSisterna.pbas,46 :: 		received_byte = Usart_Read
$003D	$2184			CALL	_usart_read
$003E	$0870			MOVF	STACK_0, 0
$003F	$00A2			MOVWF	_received_byte
;CodigoSisterna.pbas,48 :: 		case 0
$0040	$	CodigoSisterna_L_26:
$0040	$0823			MOVF	_viajero, 0
$0041	$3A00			XORLW	0
$0042	$1D03			BTFSS	STATUS, Z
$0043	$2848			GOTO	CodigoSisterna_L_27
$0044	$	CodigoSisterna_L_25:
;CodigoSisterna.pbas,49 :: 		set_altura=received_byte
$0044	$0822			MOVF	_received_byte, 0
$0045	$00A4			MOVWF	_set_altura
;CodigoSisterna.pbas,50 :: 		viajero=0
$0046	$01A3			CLRF	_viajero, 1
$0047	$2848			GOTO	CodigoSisterna_L_24
$0048	$	CodigoSisterna_L_27:
$0048	$	CodigoSisterna_L_24:
;CodigoSisterna.pbas,51 :: 		end select
$0048	$	CodigoSisterna_L_22:
;CodigoSisterna.pbas,52 :: 		end if
$0048	$	CodigoSisterna_L_23:
;CodigoSisterna.pbas,55 :: 		PIR1.RCIF=0   ' Si el dato a llegado limpio la bandera de recepcion
$0048	$128C			BCF	PIR1, 5
$0049	$	CodigoSisterna_L_29:
;CodigoSisterna.pbas,56 :: 		PIE1.RCIE=1   ' Habilitar nuevamente la interrupcion por USART
$0049	$	CodigoSisterna_L_30:
$0049	$1683			BSF	STATUS, RP0
$004A	$168C			BSF	PIE1, 5
$004B	$	CodigoSisterna_L_31:
$004B	$	CodigoSisterna_L_19:
;CodigoSisterna.pbas,57 :: 		end if
$004B	$	CodigoSisterna_L_20:
$004B	$	CodigoSisterna_L_1:
$004B	$	L_Interrupt_end:
$004B	$1303			BCF	STATUS, RP1
$004C	$1683			BSF	STATUS, RP0
$004D	$1283			BCF	STATUS, RP0
$004E	$0833			MOVF	STSAVED_1, 0
$004F	$00F1			MOVWF	STACK_1
$0050	$0832			MOVF	STSAVED_0, 0
$0051	$00F0			MOVWF	STACK_0
$0052	$082C			MOVF	?savePCLATH, 0
$0053	$008A			MOVWF	PCLATH
$0054	$082A			MOVF	?saveFSR, 0
$0055	$0084			MOVWF	FSR
$0056	$0E2B			SWAPF	?saveSTATUS, 0
$0057	$0083			MOVWF	STATUS
$0058	$0EFF			SWAPF	STACK_15, 1
$0059	$0E7F			SWAPF	STACK_15, 0
$005A	$0009			RETFIE
$01CD	$	_delay_50us:
;delays.pbas,21 :: 		sub procedure Delay_50us()
;delays.pbas,22 :: 		Delay_us(50)
$01CD	$3010			MOVLW	16
$01CE	$1303			BCF	STATUS, RP1
$01CF	$1283			BCF	STATUS, RP0
$01D0	$00FA			MOVWF	STACK_10
$01D1	$0BFA			DECFSZ	STACK_10, F
$01D2	$29D1			GOTO	$-1
$01D3	$0000			NOP
$01D4	$	delays_L_4:
$01D4	$0008			RETURN
$00F0	$	_led:
;CodigoSisterna.pbas,13 :: 		sub procedure led()
;CodigoSisterna.pbas,14 :: 		porta=1
$00F0	$3001			MOVLW	1
$00F1	$1303			BCF	STATUS, RP1
$00F2	$1283			BCF	STATUS, RP0
$00F3	$0085			MOVWF	PORTA
;CodigoSisterna.pbas,15 :: 		delay_ms(200)
$00F4	$3002			MOVLW	2
$00F5	$00FC			MOVWF	STACK_12
$00F6	$30FF			MOVLW	255
$00F7	$00FB			MOVWF	STACK_11
$00F8	$30FF			MOVLW	255
$00F9	$00FA			MOVWF	STACK_10
$00FA	$0BFC			DECFSZ	STACK_12, F
$00FB	$28FD			GOTO	$+2
$00FC	$2904			GOTO	$+8
$00FD	$0BFB			DECFSZ	STACK_11, F
$00FE	$2900			GOTO	$+2
$00FF	$2903			GOTO	$+4
$0100	$0BFA			DECFSZ	STACK_10, F
$0101	$2900			GOTO	$-1
$0102	$28FD			GOTO	$-5
$0103	$28FA			GOTO	$-9
$0104	$3006			MOVLW	6
$0105	$00FB			MOVWF	STACK_11
$0106	$30FF			MOVLW	255
$0107	$00FA			MOVWF	STACK_10
$0108	$0BFB			DECFSZ	STACK_11, F
$0109	$290B			GOTO	$+2
$010A	$290E			GOTO	$+4
$010B	$0BFA			DECFSZ	STACK_10, F
$010C	$290B			GOTO	$-1
$010D	$2908			GOTO	$-5
$010E	$300A			MOVLW	10
$010F	$00FA			MOVWF	STACK_10
$0110	$0BFA			DECFSZ	STACK_10, F
$0111	$2910			GOTO	$-1
;CodigoSisterna.pbas,16 :: 		porta=0
$0112	$0185			CLRF	PORTA, 1
;CodigoSisterna.pbas,17 :: 		delay_ms(200)
$0113	$3002			MOVLW	2
$0114	$00FC			MOVWF	STACK_12
$0115	$30FF			MOVLW	255
$0116	$00FB			MOVWF	STACK_11
$0117	$30FF			MOVLW	255
$0118	$00FA			MOVWF	STACK_10
$0119	$0BFC			DECFSZ	STACK_12, F
$011A	$291C			GOTO	$+2
$011B	$2923			GOTO	$+8
$011C	$0BFB			DECFSZ	STACK_11, F
$011D	$291F			GOTO	$+2
$011E	$2922			GOTO	$+4
$011F	$0BFA			DECFSZ	STACK_10, F
$0120	$291F			GOTO	$-1
$0121	$291C			GOTO	$-5
$0122	$2919			GOTO	$-9
$0123	$3006			MOVLW	6
$0124	$00FB			MOVWF	STACK_11
$0125	$30FF			MOVLW	255
$0126	$00FA			MOVWF	STACK_10
$0127	$0BFB			DECFSZ	STACK_11, F
$0128	$292A			GOTO	$+2
$0129	$292D			GOTO	$+4
$012A	$0BFA			DECFSZ	STACK_10, F
$012B	$292A			GOTO	$-1
$012C	$2927			GOTO	$-5
$012D	$300A			MOVLW	10
$012E	$00FA			MOVWF	STACK_10
$012F	$0BFA			DECFSZ	STACK_10, F
$0130	$292F			GOTO	$-1
;CodigoSisterna.pbas,18 :: 		porta=1
$0131	$3001			MOVLW	1
$0132	$0085			MOVWF	PORTA
;CodigoSisterna.pbas,19 :: 		delay_ms(200)
$0133	$3002			MOVLW	2
$0134	$00FC			MOVWF	STACK_12
$0135	$30FF			MOVLW	255
$0136	$00FB			MOVWF	STACK_11
$0137	$30FF			MOVLW	255
$0138	$00FA			MOVWF	STACK_10
$0139	$0BFC			DECFSZ	STACK_12, F
$013A	$293C			GOTO	$+2
$013B	$2943			GOTO	$+8
$013C	$0BFB			DECFSZ	STACK_11, F
$013D	$293F			GOTO	$+2
$013E	$2942			GOTO	$+4
$013F	$0BFA			DECFSZ	STACK_10, F
$0140	$293F			GOTO	$-1
$0141	$293C			GOTO	$-5
$0142	$2939			GOTO	$-9
$0143	$3006			MOVLW	6
$0144	$00FB			MOVWF	STACK_11
$0145	$30FF			MOVLW	255
$0146	$00FA			MOVWF	STACK_10
$0147	$0BFB			DECFSZ	STACK_11, F
$0148	$294A			GOTO	$+2
$0149	$294D			GOTO	$+4
$014A	$0BFA			DECFSZ	STACK_10, F
$014B	$294A			GOTO	$-1
$014C	$2947			GOTO	$-5
$014D	$300A			MOVLW	10
$014E	$00FA			MOVWF	STACK_10
$014F	$0BFA			DECFSZ	STACK_10, F
$0150	$294F			GOTO	$-1
$0151	$	CodigoSisterna_L_0:
$0151	$0008			RETURN
$01C7	$	_pulso:
;CodigoSisterna.pbas,60 :: 		sub procedure Pulso()
;CodigoSisterna.pbas,61 :: 		portc.5=1
$01C7	$	CodigoSisterna_L_33:
$01C7	$1303			BCF	STATUS, RP1
$01C8	$1283			BCF	STATUS, RP0
$01C9	$1687			BSF	PORTC, 5
$01CA	$	CodigoSisterna_L_34:
;CodigoSisterna.pbas,62 :: 		Delay_50us
$01CA	$21CD			CALL	_delay_50us
;CodigoSisterna.pbas,63 :: 		portc.5=0
$01CB	$1287			BCF	PORTC, 5
$01CC	$	CodigoSisterna_L_36:
$01CC	$	CodigoSisterna_L_32:
$01CC	$0008			RETURN
$0197	$	_usart_write:
;USART_c67.ppas,40 :: 		
;USART_c67.ppas,42 :: 		
$0197	$	USART_c67_L_14:
$0197	$1303			BCF	STATUS, RP1
$0198	$1683			BSF	STATUS, RP0
$0199	$0818			MOVF	TXSTA, 0
$019A	$00F1			MOVWF	STACK_1
$019B	$3000			MOVLW	0
$019C	$18F1			BTFSC	STACK_1, 1
$019D	$3001			MOVLW	1
$019E	$00F1			MOVWF	STACK_1
$019F	$0871			MOVF	STACK_1, 0
$01A0	$3A00			XORLW	0
$01A1	$1D03			BTFSS	STATUS, Z
$01A2	$29A5			GOTO	USART_c67_L_15
;USART_c67.ppas,43 :: 		
$01A3	$0000			NOP
$01A4	$2997			GOTO	USART_c67_L_14
$01A5	$	USART_c67_L_15:
;USART_c67.ppas,44 :: 		
$01A5	$1283			BCF	STATUS, RP0
$01A6	$082E			MOVF	FARG_USART_Write, 0
$01A7	$0099			MOVWF	TXREG
$01A8	$	USART_c67_L_12:
;USART_c67.ppas,45 :: 		
$01A8	$0008			RETURN
$016F	$	_usart_init:
;USART_c67.ppas,22 :: 		
;USART_c67.ppas,24 :: 		
$016F	$	USART_c67_L_1:
$016F	$1303			BCF	STATUS, RP1
$0170	$1683			BSF	STATUS, RP0
$0171	$1698			BSF	TXSTA, 5
$0172	$	USART_c67_L_2:
;USART_c67.ppas,25 :: 		
$0172	$3090			MOVLW	144
$0173	$1283			BCF	STATUS, RP0
$0174	$0098			MOVWF	RCSTA
;USART_c67.ppas,31 :: 		
$0175	$	USART_c67_L_3:
$0175	$1683			BSF	STATUS, RP0
$0176	$1787			BSF	TRISC, 7
$0177	$	USART_c67_L_4:
;USART_c67.ppas,32 :: 		
$0177	$1307			BCF	TRISC, 6
$0178	$	USART_c67_L_6:
;USART_c67.ppas,35 :: 		
$0178	$	USART_c67_L_8:
$0178	$1283			BCF	STATUS, RP0
$0179	$080C			MOVF	PIR1, 0
$017A	$00F1			MOVWF	STACK_1
$017B	$3000			MOVLW	0
$017C	$1AF1			BTFSC	STACK_1, 5
$017D	$3001			MOVLW	1
$017E	$00F1			MOVWF	STACK_1
$017F	$0871			MOVF	STACK_1, 0
$0180	$3A01			XORLW	1
$0181	$1903			BTFSC	STATUS, Z
$0182	$2978			GOTO	USART_c67_L_8
;USART_c67.ppas,36 :: 		
$0183	$	USART_c67_L_9:
$0183	$	USART_c67_L_0:
;USART_c67.ppas,37 :: 		
$0183	$0008			RETURN
$0152	$	_div_16x16_u:
$0152	$1303			BCF	STATUS, RP1
$0153	$1283			BCF	STATUS, RP0
;math.ppas,108 :: 		
;math.ppas,110 :: 		
$0154	$01F8			CLRF	STACK_8
;math.ppas,111 :: 		
$0155	$01F9			CLRF	STACK_9
;math.ppas,112 :: 		
$0156	$3010			MOVLW	16
;math.ppas,113 :: 		
$0157	$00FC			MOVWF	STACK_12
;math.ppas,114 :: 		
$0158	$0D71			RLF	STACK_1, W
;math.ppas,115 :: 		
$0159	$0DF8			RLF	STACK_8, F
;math.ppas,116 :: 		
$015A	$0DF9			RLF	STACK_9, F
;math.ppas,117 :: 		
$015B	$0874			MOVF	STACK_4, W
;math.ppas,118 :: 		
$015C	$02F8			SUBWF	STACK_8, F
;math.ppas,119 :: 		
$015D	$0875			MOVF	STACK_5, W
;math.ppas,120 :: 		
$015E	$1C03			BTFSS	STATUS, C
;math.ppas,121 :: 		
$015F	$0F75			INCFSZ	STACK_5, W
;math.ppas,122 :: 		
$0160	$02F9			SUBWF	STACK_9, F
;math.ppas,123 :: 		
$0161	$1803			BTFSC	STATUS, C
;math.ppas,124 :: 		
$0162	$296A			GOTO	$+8
;math.ppas,125 :: 		
$0163	$0874			MOVF	STACK_4, W
;math.ppas,126 :: 		
$0164	$07F8			ADDWF	STACK_8, F
;math.ppas,127 :: 		
$0165	$0875			MOVF	STACK_5, W
;math.ppas,128 :: 		
$0166	$1803			BTFSC	STATUS, C
;math.ppas,129 :: 		
$0167	$0F75			INCFSZ	STACK_5, W
;math.ppas,130 :: 		
$0168	$07F9			ADDWF	STACK_9, F
;math.ppas,131 :: 		
$0169	$1003			BCF	STATUS, C
;math.ppas,132 :: 		
$016A	$0DF0			RLF	STACK_0, F
;math.ppas,133 :: 		
$016B	$0DF1			RLF	STACK_1, F
;math.ppas,134 :: 		
$016C	$0BFC			DECFSZ	STACK_12, F
;math.ppas,135 :: 		
$016D	$2958			GOTO	$-21
;math.ppas,136 :: 		
$016E	$	math_L_3:
;math.ppas,137 :: 		
$016E	$0008			RETURN
$01A9	$	_div_8x8_u:
$01A9	$1303			BCF	STATUS, RP1
$01AA	$1283			BCF	STATUS, RP0
;math.ppas,88 :: 		
;math.ppas,90 :: 		
$01AB	$01F8			CLRF	STACK_8, F
;math.ppas,91 :: 		
$01AC	$3008			MOVLW	8
;math.ppas,92 :: 		
$01AD	$00FC			MOVWF	STACK_12
;math.ppas,93 :: 		
$01AE	$0D70			RLF	STACK_0, W
;math.ppas,94 :: 		
$01AF	$0DF8			RLF	STACK_8, F
;math.ppas,95 :: 		
$01B0	$0874			MOVF	STACK_4, W
;math.ppas,96 :: 		
$01B1	$02F8			SUBWF	STACK_8, F
;math.ppas,97 :: 		
$01B2	$1803			BTFSC	STATUS, C
;math.ppas,98 :: 		
$01B3	$29B6			GOTO	$+3
;math.ppas,99 :: 		
$01B4	$07F8			ADDWF	STACK_8, F
;math.ppas,100 :: 		
$01B5	$1003			BCF	STATUS, C
;math.ppas,101 :: 		
$01B6	$0DF0			RLF	STACK_0, F
;math.ppas,102 :: 		
$01B7	$0BFC			DECFSZ	STACK_12, F
;math.ppas,103 :: 		
$01B8	$29AE			GOTO	$-10
;math.ppas,104 :: 		
$01B9	$	math_L_2:
;math.ppas,105 :: 		
$01B9	$0008			RETURN
$005B	$	_main:
;CodigoSisterna.pbas,67 :: 		main:
$005B	$	_main_main:
;CodigoSisterna.pbas,68 :: 		OPTION_REG=%11000110      ' Desabilito resistores pull up y  asigno prescaler to TMR0 (128)
$005B	$30C6			MOVLW	198
$005C	$1303			BCF	STATUS, RP1
$005D	$1683			BSF	STATUS, RP0
$005E	$0081			MOVWF	OPTION_REG
;CodigoSisterna.pbas,69 :: 		INTCON = %11000000        ' Enable external interrupts bit(7) and bit(6) de permiso q no se controlan con INTCON
$005F	$30C0			MOVLW	192
$0060	$008B			MOVWF	INTCON
;CodigoSisterna.pbas,71 :: 		PIE1=%00100000
$0061	$3020			MOVLW	32
$0062	$008C			MOVWF	PIE1
;CodigoSisterna.pbas,74 :: 		ANSEL =  %00000000           'REGISTRO CONFIG. O DIGITAL, 1 ANALOGICO
$0063	$1703			BSF	STATUS, RP1
$0064	$0188			CLRF	ANSEL, 1
;CodigoSisterna.pbas,75 :: 		ANSELH = %00000000           'REGISTRO CONFIG. O DIGITAL, 1 ANALOGICO
$0065	$0189			CLRF	ANSELH, 1
;CodigoSisterna.pbas,77 :: 		TMR0  = 0            ' Timer0 initial value (Fosc/4)*prescalador*(256-TMRO)
$0066	$1303			BCF	STATUS, RP1
$0067	$1283			BCF	STATUS, RP0
$0068	$0181			CLRF	TMR0, 1
;CodigoSisterna.pbas,80 :: 		trisa  = %00000000           ' Configuracion IN/OUT PORTA
$0069	$1683			BSF	STATUS, RP0
$006A	$0185			CLRF	TRISA, 1
;CodigoSisterna.pbas,81 :: 		trisb  = %00000001           ' Configuracion IN/OUT PORTB
$006B	$3001			MOVLW	1
$006C	$0086			MOVWF	TRISB
;CodigoSisterna.pbas,82 :: 		trisc  = %10000000           ' Configuracion IN/OUT PORTC
$006D	$3080			MOVLW	128
$006E	$0087			MOVWF	TRISC
;CodigoSisterna.pbas,85 :: 		PORTA  = %00000000           ' Inicializacion PORTA
$006F	$1283			BCF	STATUS, RP0
$0070	$0185			CLRF	PORTA, 1
;CodigoSisterna.pbas,86 :: 		PORTB  = %00000000           ' Inicializacion PORTB
$0071	$0186			CLRF	PORTB, 1
;CodigoSisterna.pbas,87 :: 		PORTC  = %00000000           ' Inicializacion PORTC
$0072	$0187			CLRF	PORTC, 1
;CodigoSisterna.pbas,89 :: 		Usart_Init(9600)
$0073	$3019			MOVLW	25
$0074	$1683			BSF	STATUS, RP0
$0075	$0099			MOVWF	SPBRG
$0076	$1518			BSF	TXSTA, BRGH
$0077	$216F			CALL	_usart_init
;CodigoSisterna.pbas,91 :: 		flanco=1
$0078	$3001			MOVLW	1
$0079	$00A0			MOVWF	_flanco
;CodigoSisterna.pbas,92 :: 		Tiempo=0
$007A	$01A1			CLRF	_tiempo, 1
;CodigoSisterna.pbas,93 :: 		set_altura=0
$007B	$01A4			CLRF	_set_altura, 1
;CodigoSisterna.pbas,94 :: 		med_altura=0
$007C	$01A5			CLRF	_med_altura, 1
;CodigoSisterna.pbas,95 :: 		viajero=0
$007D	$01A3			CLRF	_viajero, 1
;CodigoSisterna.pbas,96 :: 		received_byte=0
$007E	$01A2			CLRF	_received_byte, 1
;CodigoSisterna.pbas,97 :: 		led()
$007F	$20F0			CALL	_led
;CodigoSisterna.pbas,98 :: 		INTCON.INTE=1
$0080	$	CodigoSisterna_L_38:
$0080	$160B			BSF	INTCON, 4
$0081	$	CodigoSisterna_L_39:
;CodigoSisterna.pbas,103 :: 		while true
$0081	$	CodigoSisterna_L_41:
;CodigoSisterna.pbas,104 :: 		Pulso()
$0081	$21C7			CALL	_pulso
;CodigoSisterna.pbas,105 :: 		Delay_ms(50)
$0082	$3041			MOVLW	65
$0083	$00FB			MOVWF	STACK_11
$0084	$30FF			MOVLW	255
$0085	$00FA			MOVWF	STACK_10
$0086	$0BFB			DECFSZ	STACK_11, F
$0087	$2889			GOTO	$+2
$0088	$288C			GOTO	$+4
$0089	$0BFA			DECFSZ	STACK_10, F
$008A	$2889			GOTO	$-1
$008B	$2886			GOTO	$-5
$008C	$30C3			MOVLW	195
$008D	$00FA			MOVWF	STACK_10
$008E	$0BFA			DECFSZ	STACK_10, F
$008F	$288E			GOTO	$-1
$0090	$0000			NOP
;CodigoSisterna.pbas,106 :: 		distancia=(Tiempo*128)/58
$0091	$0821			MOVF	_tiempo, 0
$0092	$00F0			MOVWF	STACK_0
$0093	$01F1			CLRF	STACK_0+1
$0094	$3007			MOVLW	7
$0095	$00F4			MOVWF	STACK_4
$0096	$0874			MOVF	STACK_4, 0
$0097	$	L_main_0:
$0097	$1903			BTFSC	STATUS, Z
$0098	$289E			GOTO	L_main_1
$0099	$0DF0			RLF	STACK_0, 1
$009A	$0DF1			RLF	STACK_0+1, 1
$009B	$1070			BCF	STACK_0, 0
$009C	$3FFF			ADDLW	255
$009D	$2897			GOTO	L_main_0
$009E	$	L_main_1:
$009E	$303A			MOVLW	58
$009F	$00F4			MOVWF	STACK_4
$00A0	$01F5			CLRF	STACK_4+1
$00A1	$2152			CALL	_div_16x16_u
$00A2	$0870			MOVF	STACK_0, 0
$00A3	$00A6			MOVWF	_distancia
$00A4	$0871			MOVF	STACK_0+1, 0
$00A5	$00A7			MOVWF	_distancia+1
;CodigoSisterna.pbas,107 :: 		med_altura= (22 - distancia)
$00A6	$0870			MOVF	STACK_0, 0
$00A7	$3C16			SUBLW	22
$00A8	$00F0			MOVWF	STACK_0
$00A9	$0871			MOVF	STACK_0+1, 0
$00AA	$1C03			BTFSS	STATUS, C
$00AB	$3F01			ADDLW	1
$00AC	$3C00			SUBLW	0
$00AD	$00F1			MOVWF	STACK_0+1
$00AE	$0870			MOVF	STACK_0, 0
$00AF	$00A5			MOVWF	_med_altura
;CodigoSisterna.pbas,109 :: 		PORTA = med_altura     'Tiempo=1 = 128us       Tiempo=195 = 25ms
$00B0	$0870			MOVF	STACK_0, 0
$00B1	$0085			MOVWF	PORTA
;CodigoSisterna.pbas,111 :: 		if(set_altura <> 0 )then
$00B2	$0824			MOVF	_set_altura, 0
$00B3	$3A00			XORLW	0
$00B4	$1903			BTFSC	STATUS, Z
$00B5	$28BE			GOTO	CodigoSisterna_L_46
$00B6	$	CodigoSisterna_L_45:
;CodigoSisterna.pbas,113 :: 		if(med_altura >= set_altura )then
$00B6	$0824			MOVF	_set_altura, 0
$00B7	$0225			SUBWF	_med_altura, 0
$00B8	$1C03			BTFSS	STATUS, C
$00B9	$28BC			GOTO	CodigoSisterna_L_49
$00BA	$	CodigoSisterna_L_48:
;CodigoSisterna.pbas,114 :: 		portb.5=0
$00BA	$1286			BCF	PORTB, 5
$00BB	$	CodigoSisterna_L_52:
$00BB	$28BD			GOTO	CodigoSisterna_L_50
;CodigoSisterna.pbas,115 :: 		else
$00BC	$	CodigoSisterna_L_49:
;CodigoSisterna.pbas,116 :: 		portb.5=1
$00BC	$	CodigoSisterna_L_53:
$00BC	$1686			BSF	PORTB, 5
$00BD	$	CodigoSisterna_L_54:
;CodigoSisterna.pbas,117 :: 		end if
$00BD	$	CodigoSisterna_L_50:
$00BD	$28BF			GOTO	CodigoSisterna_L_47
;CodigoSisterna.pbas,119 :: 		else
$00BE	$	CodigoSisterna_L_46:
;CodigoSisterna.pbas,120 :: 		portb.5=0
$00BE	$1286			BCF	PORTB, 5
$00BF	$	CodigoSisterna_L_56:
;CodigoSisterna.pbas,121 :: 		end if
$00BF	$	CodigoSisterna_L_47:
;CodigoSisterna.pbas,123 :: 		Delay_ms(50)
$00BF	$3041			MOVLW	65
$00C0	$00FB			MOVWF	STACK_11
$00C1	$30FF			MOVLW	255
$00C2	$00FA			MOVWF	STACK_10
$00C3	$0BFB			DECFSZ	STACK_11, F
$00C4	$28C6			GOTO	$+2
$00C5	$28C9			GOTO	$+4
$00C6	$0BFA			DECFSZ	STACK_10, F
$00C7	$28C6			GOTO	$-1
$00C8	$28C3			GOTO	$-5
$00C9	$30C3			MOVLW	195
$00CA	$00FA			MOVWF	STACK_10
$00CB	$0BFA			DECFSZ	STACK_10, F
$00CC	$28CB			GOTO	$-1
$00CD	$0000			NOP
;CodigoSisterna.pbas,124 :: 		decena=(( med_altura /10) mod 10) + 48
$00CE	$300A			MOVLW	10
$00CF	$00F4			MOVWF	STACK_4
$00D0	$0825			MOVF	_med_altura, 0
$00D1	$00F0			MOVWF	STACK_0
$00D2	$21A9			CALL	_div_8x8_u
$00D3	$300A			MOVLW	10
$00D4	$00F4			MOVWF	STACK_4
$00D5	$21A9			CALL	_div_8x8_u
$00D6	$0878			MOVF	STACK_8, 0
$00D7	$00F0			MOVWF	STACK_0
$00D8	$3030			MOVLW	48
$00D9	$0770			ADDWF	STACK_0, 0
$00DA	$00A8			MOVWF	_decena
;CodigoSisterna.pbas,125 :: 		unidad=( med_altura mod 10) + 48
$00DB	$300A			MOVLW	10
$00DC	$00F4			MOVWF	STACK_4
$00DD	$0825			MOVF	_med_altura, 0
$00DE	$00F0			MOVWF	STACK_0
$00DF	$21A9			CALL	_div_8x8_u
$00E0	$0878			MOVF	STACK_8, 0
$00E1	$00F0			MOVWF	STACK_0
$00E2	$3030			MOVLW	48
$00E3	$0770			ADDWF	STACK_0, 0
$00E4	$00A9			MOVWF	_unidad
;CodigoSisterna.pbas,128 :: 		Usart_Write(INICIO)
$00E5	$3073			MOVLW	115
$00E6	$00AE			MOVWF	FARG_USART_Write
$00E7	$2197			CALL	_usart_write
;CodigoSisterna.pbas,129 :: 		Usart_Write(decena )
$00E8	$0828			MOVF	_decena, 0
$00E9	$00AE			MOVWF	FARG_USART_Write
$00EA	$2197			CALL	_usart_write
;CodigoSisterna.pbas,130 :: 		Usart_Write(unidad )
$00EB	$0829			MOVF	_unidad, 0
$00EC	$00AE			MOVWF	FARG_USART_Write
$00ED	$2197			CALL	_usart_write
$00EE	$2881			GOTO	CodigoSisterna_L_41
;CodigoSisterna.pbas,138 :: 		wend
$00EF	$28EF			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		interrupt
$005B		main
$00F0		led
$0152		Div_16x16_U
$016F		USART_Init
$0184		USART_Read
$0197		USART_Write
$01A9		Div_8x8_U
$01BA		USART_Data_Ready
$01C7		Pulso
$01CD		Delay_50us


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_interrupt:
$0019		CodigoSisterna_L_2:
$001D		CodigoSisterna_L_5:
$0021		CodigoSisterna_L_9:
$0022		CodigoSisterna_L_6:
$0028		CodigoSisterna_L_10:
$002A		CodigoSisterna_L_11:
$002A		CodigoSisterna_L_7:
$002B		CodigoSisterna_L_13:
$002B		CodigoSisterna_L_14:
$002C		CodigoSisterna_L_15:
$002D		CodigoSisterna_L_17:
$002D		CodigoSisterna_L_3:
$002D		CodigoSisterna_L_4:
$0038		CodigoSisterna_L_18:
$003D		CodigoSisterna_L_21:
$0040		CodigoSisterna_L_26:
$0044		CodigoSisterna_L_25:
$0048		CodigoSisterna_L_22:
$0048		CodigoSisterna_L_23:
$0048		CodigoSisterna_L_24:
$0048		CodigoSisterna_L_27:
$0049		CodigoSisterna_L_29:
$0049		CodigoSisterna_L_30:
$004B		CodigoSisterna_L_1:
$004B		CodigoSisterna_L_19:
$004B		CodigoSisterna_L_20:
$004B		CodigoSisterna_L_31:
$004B		L_Interrupt_end:
$005B		_main:
$005B		_main_main:
$0080		CodigoSisterna_L_38:
$0081		CodigoSisterna_L_39:
$0081		CodigoSisterna_L_41:
$0097		L_main_0:
$009E		L_main_1:
$00B6		CodigoSisterna_L_45:
$00BA		CodigoSisterna_L_48:
$00BB		CodigoSisterna_L_52:
$00BC		CodigoSisterna_L_49:
$00BC		CodigoSisterna_L_53:
$00BD		CodigoSisterna_L_50:
$00BD		CodigoSisterna_L_54:
$00BE		CodigoSisterna_L_46:
$00BF		CodigoSisterna_L_47:
$00BF		CodigoSisterna_L_56:
$00F0		_led:
$0151		CodigoSisterna_L_0:
$0152		_div_16x16_u:
$016E		math_L_3:
$016F		_usart_init:
$016F		USART_c67_L_1:
$0172		USART_c67_L_2:
$0175		USART_c67_L_3:
$0177		USART_c67_L_4:
$0178		USART_c67_L_6:
$0178		USART_c67_L_8:
$0183		USART_c67_L_0:
$0183		USART_c67_L_9:
$0184		_usart_read:
$0192		USART_c67_L_20:
$0193		USART_c67_L_24:
$0193		USART_c67_L_25:
$0194		USART_c67_L_19:
$0194		USART_c67_L_21:
$0194		USART_c67_L_22:
$0194		USART_c67_L_26:
$0197		_usart_write:
$0197		USART_c67_L_14:
$01A5		USART_c67_L_15:
$01A8		USART_c67_L_12:
$01A9		_div_8x8_u:
$01B9		math_L_2:
$01BA		_usart_data_ready:
$01C4		USART_c67_L_18:
$01C7		_pulso:
$01C7		CodigoSisterna_L_33:
$01CA		CodigoSisterna_L_34:
$01CC		CodigoSisterna_L_32:
$01CC		CodigoSisterna_L_36:
$01CD		_delay_50us:
$01D4		delays_L_4:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0001		TMR0
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0007		PORTC
$000A		PCLATH
$000B		INTCON
$000C		PIR1
$0018		RCSTA
$0019		TXREG
$001A		RCREG
$0020		_flanco
$0021		_tiempo
$0022		_received_byte
$0023		_viajero
$0024		_set_altura
$0025		_med_altura
$0026		_distancia
$0028		_decena
$0029		_unidad
$002A		?saveFSR
$002B		?saveSTATUS
$002C		?savePCLATH
$002D		_usart_data_ready_local_result
$002D		_usart_read_local_result
$002E		FARG_USART_Init
$002E		FARG_USART_Write
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0081		OPTION_REG
$0085		TRISA
$0086		TRISB
$0087		TRISC
$008C		PIE1
$0098		TXSTA
$0099		SPBRG
$0188		ANSEL
$0189		ANSELH


